{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"setAc",
				"setStockActiveTemp"
			],
			[
				"colName",
				"colName_errorLine"
			],
			[
				"glo_key_error",
				"glo_key_errorFunction"
			],
			[
				"email",
				"emailBodyInPformat"
			],
			[
				"send",
				"sendEmail"
			],
			[
				"ex",
				"except"
			],
			[
				"glo_key_stat",
				"glo_key_statusCode"
			],
			[
				"glo_key_sta",
				"glo_key_statusCode"
			],
			[
				"status",
				"status_text"
			],
			[
				"glo_stockSt",
				"glo_stockStatus_list"
			],
			[
				"max",
				"max_attempts"
			],
			[
				"Val",
				"ValueError"
			],
			[
				"test_",
				"test_abortOrder"
			],
			[
				"nn_",
				"nn_price_float"
			],
			[
				"nn_pr",
				"nn_price_str"
			],
			[
				"reset",
				"resetCounterError"
			],
			[
				"isSt",
				"isStockActiveTemp"
			],
			[
				"glo_colName_",
				"glo_colName_amountHeld"
			],
			[
				"sellP",
				"glo_sellPercentageSubtraction"
			],
			[
				"glo_colName_sb",
				"glo_colName_sbNameshort"
			],
			[
				"glo_orderNn_k",
				"glo_orderNn_key_volume"
			],
			[
				"glo_orderNn_key_",
				"glo_orderNn_key_side"
			],
			[
				"paylo",
				"payloadOrder"
			],
			[
				"break",
				"breakAtFirstBuy"
			],
			[
				"isd",
				"isdigit"
			],
			[
				"glo_or",
				"glo_orderNn_key_price"
			],
			[
				"glo_",
				"glo_sbSignalBuy"
			],
			[
				"glo_orderNn_key",
				"glo_orderNn_key_marketId"
			],
			[
				"glo_colName",
				"glo_colName_identifier_id"
			],
			[
				"glo_order",
				"glo_orderNn_key_identifier"
			],
			[
				"getPay",
				"getPayloadOrder_staticValues"
			],
			[
				"glo_col",
				"glo_colName_url_nn"
			],
			[
				"dict_sto",
				"dict_stockStatus"
			],
			[
				"glo_sb",
				"glo_sbSignalSell"
			],
			[
				"glo_sig",
				"glo_sbSignalShort"
			],
			[
				"error",
				"errorHandler"
			],
			[
				"buy",
				"buy"
			],
			[
				"gro",
				"group_1_list"
			],
			[
				"buys_",
				"buys_total"
			],
			[
				"dict",
				"dict_to"
			],
			[
				"trade",
				"trade_list"
			],
			[
				"col_n",
				"glo_colName_trade_price"
			],
			[
				"col_",
				"glo_colName_trade_price"
			],
			[
				"glo_colNa",
				"glo_colName_nameShortNordnet"
			],
			[
				"trad",
				"trade_list"
			],
			[
				"order",
				"orderStat_list"
			],
			[
				"tra",
				"trade_list"
			],
			[
				"setStockL",
				"setStockListGlobally"
			],
			[
				"path_",
				"path_input_main"
			],
			[
				"glo_stockS",
				"glo_stockStatus_list_name"
			],
			[
				"mod",
				"mod_shared"
			],
			[
				"list_of",
				"list_of_key_selectors"
			],
			[
				"not",
				"not_in_list"
			],
			[
				"remove",
				"remove_list"
			],
			[
				"remve",
				"remove_list"
			],
			[
				"temp_",
				"temp_list"
			],
			[
				"stocksTo",
				"stocksToBuy_list"
			],
			[
				"dict_",
				"dict_active"
			],
			[
				"temp_nNa",
				"temp_nNActive_list"
			],
			[
				"temp_nNH",
				"temp_nNHeld_list"
			]
		]
	},
	"buffers":
	[
		{
			"file": "main.py",
			"settings":
			{
				"buffer_size": 69092,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "send_email_files.py",
			"settings":
			{
				"buffer_size": 2634,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "test.py",
			"settings":
			{
				"buffer_size": 16699,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "create_stock_lists.py",
			"settings":
			{
				"buffer_size": 45349,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "shared.py",
			"settings":
			{
				"buffer_size": 26663,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "main_process_monitor.py",
			"settings":
			{
				"buffer_size": 2308,
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"console":
	{
		"height": 0.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/E/Dokument/Dropbox/development/sb_nn_trader"
	],
	"file_history":
	[
		"/E/Dokument/Dropbox/development/sb_nn_trader/output/errorLog.csv",
		"/E/Dokument/Dropbox/development/sb_nn_trader/watchlist.py",
		"/E/Dokument/Dropbox/development/scraping_ufc/scrape_ufc_piratebay.py",
		"/E/Dokument/Dropbox/development/sb_nn_trader/.gitignore",
		"/E/Dokument/Dropbox/development/sb_nn_trader/create_stock_lists.py",
		"/E/Dokument/Dropbox/development/sb_nn_trader/send_email_files.py",
		"/E/Dokument/Dropbox/development/sb_nn_trader/main_process_monitor.py",
		"/E/Dokument/Dropbox/development/sb_nn_trader/sb_nn_trader.sublime-project",
		"/E/Dokument/Dropbox/Development/nordnet-api-00/python/3-trader/4-get-sb-signal-login/create_stock_lists.py",
		"/E/Dokument/Dropbox/Development/nordnet-api-00/python/3-trader/4-get-sb-signal-login/sb_nn_trader.sublime-project",
		"/E/Dokument/Dropbox/Development/scraping_ufc/scrape_ufc_piratebay.py",
		"/E/Dokument/Dropbox/Development/scraping_ufc/credentials.yml",
		"/E/Dokument/Dropbox/Development/scraping_ufc/scrape_ufc_1337.py"
	],
	"find":
	{
		"height": 56.0
	},
	"find_in_files":
	{
		"height": 189.0,
		"where_history":
		[
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			" errorHandler",
			"setAmountAvailableStatic",
			"setMaxNumberOfActiveAboveMaxHeld",
			"setMaxNumberOfStocks",
			"S",
			"resetDaily",
			"BP()",
			"setStockActiveTemp",
			"sbActiveType",
			"isStockActive",
			"scrapeSbForSignalsAfterMarketIsClosed",
			"askIfToRerunStockFile",
			"getAmountAvailableFromNn",
			"isMarketOpenCustom",
			"isMarketOpenNow",
			"isMarketHours",
			"getMaxNumberOfActiveAboveMaxHeld",
			"setMaxNumberOfActiveAboveMaxHeld",
			"getMaxNumberOfStocks",
			"getCurrentNumberOfStocksActiveSell",
			"getCurrentNumberOfStocksActiveBuy",
			"getCurrentNumberOfStocksHeld",
			"getAmountAvailable",
			"getSbNameShortByNnName",
			"delStockActiveTemp",
			"setStockActive",
			"getStocksNumberHeld",
			"isStockHeld",
			"getStocksNumberHeld",
			"resetStockStatus",
			"getStockStatus",
			"writeConfirmationStatistics",
			"writeOrderStatistics",
			"writeErrorLog(inspect.stack()[1][3], format(sys.exc_info()[-1].tb_lineno), inspect.stack()[1][1],",
			"writeErrorLog",
			"()",
			"resetd",
			"dict_stock",
			"nn_priceClosing_str = getNnStockPrice(dict_stock.get(mod_shared.glo_colName_url_nn))",
			"getPayloadOrder_dynamic_sell",
			"getPayloadOrder_dynamic_buy",
			"payloadOrder_staticValues_dict",
			"getPayloadOrder_dynamic_sell",
			"500",
			"2",
			"5",
			"10",
			"20",
			"50",
			"100",
			"200",
			"500",
			"f500",
			".",
			".2",
			".5",
			"resetDaily",
			"glo_key_errorMsg",
			"getStockFailedMessageForEmail",
			"stocks_failed_list",
			"checkIfStockListNeedUpdating",
			"reset_scrapeSbForSignalsAfterMarketIsClosed_counter",
			"resetTempActive",
			"setOrderStatistics",
			")",
			"schedule.every().day.at(",
			"temp_list",
			"glo_timeConditionRerunStockFile",
			"getStockFailedMessageForEmail",
			"setStockActiveTemp",
			"getStockFailedMessageForEmail",
			"list_of_stockRequests_failed",
			"stocks_not_matched",
			"stocks_for_action",
			"Counter",
			"counter",
			"dict_stock.get(mod_shared.glo_colName_sbNameshort)",
			"sb_nameShort",
			"requests_should_retry",
			"stocks_failed_list",
			"list_of_stocks_failed",
			"latestSignal_date",
			"list_of_stocks_failed",
			"scrapeSbForSignalsAfterMarketIsClosed",
			"sellDecimalSubtraction",
			"formatNnStockPriceForSell",
			"getPayloadOrder_dynamic_sell",
			"nn_price_sell_float",
			"n",
			"f",
			"prec",
			"f500",
			"f",
			"200",
			"500",
			"500 ",
			"500",
			"f500",
			"num",
			"4",
			",4)",
			",3)",
			",2)",
			",1)",
			"1))",
			"''",
			"500",
			"up",
			"plus500",
			"rnd2",
			"closest",
			"str(round(n-math.fmod(n,f),prec))",
			"0.0005",
			"plus02",
			"plus1",
			"plus5",
			"0.02",
			"plus10",
			"20",
			"1",
			"plus50",
			"0.2",
			"plus100",
			"0.1",
			"plus200",
			"nplus200",
			"5",
			"0.1"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"stocks-to-buy",
			"stocksToBuy_list",
			"stocks-to-buy",
			"glo_urlHeader_userAgent",
			"getDateToday_customFormat_str('%Y-%m-%d')",
			"getDate_deltaToday_customFormat_str",
			"getDateToday_customFormat_str",
			"getDate_deltaToday_customFormat_Str",
			"setListGlobal",
			"glo_stockInfoUpdated_file",
			"glo_colName_average_buyAndFailKeyValue_and_average_buyAndSellIntradayClosingPercentChange",
			"glo_colName_median_buyAndFailKeyValue_and_median_buyAndSellIntradayClosingPercentChange",
			"glo_colName_median_buyAndFailKeyValue_and_median_sellIntradayClosingPercentChange",
			"glo_colName_average_buyAndFailKeyValue_and_average_sellIntradayClosingPercentChange",
			"glo_colName_median_buyAndFailKeyValue_and_median_sellIntradayClosingChange_percent",
			"mod_shared.writeListToCsvFile",
			"writeListToCsvFile",
			"getListFromFile"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "main.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 69092,
						"regions":
						{
						},
						"selection":
						[
							[
								68310,
								68310
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2926.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "send_email_files.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2634,
						"regions":
						{
						},
						"selection":
						[
							[
								1619,
								1619
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 106.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "test.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 16699,
						"regions":
						{
						},
						"selection":
						[
							[
								563,
								563
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 216.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "create_stock_lists.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 45349,
						"regions":
						{
						},
						"selection":
						[
							[
								746,
								746
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 150.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "shared.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 26663,
						"regions":
						{
						},
						"selection":
						[
							[
								7837,
								7837
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1504.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "main_process_monitor.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2308,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 28.0
	},
	"input":
	{
		"height": 83.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "sb_nn_trader.sublime-project",
	"replace":
	{
		"height": 52.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 750.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"E:\\Dokument\\Dropbox\\Development\\scraping_ufc\\scraping_ufc.sublime-project"
			]
		],
		"width": 570.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": false,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": false,
	"side_bar_width": 397.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
